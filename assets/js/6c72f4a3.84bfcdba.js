"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[455],{15873:e=>{e.exports=JSON.parse('{"functions":[{"name":"Load","desc":"Loads a ModuleScript into the Loader. \\n\\nLoadOptions:\\n\\nDeep is an optional boolean that will determine if the Loader should load all ModuleScripts in the Parent\'s descendants.\\n\\nPredicate is an optional function that will be used to determine if the ModuleScript should be loaded.\\n\\nExclusions is an optional table of strings that will be used to exclude certain ModuleScripts from being loaded.","params":[{"name":"Parent:","desc":"","lua_type":"Instance"},{"name":"LoadOptions:","desc":"","lua_type":"{ Deep: boolean?, Predicate: ((ModuleScript) -> boolean)?, Exclusions: { string }? }?"}],"returns":[{"desc":"","lua_type":"Promise<string>"}],"function_type":"static","source":{"line":393,"path":"src/init.luau"}},{"name":"Start","desc":"Starts the Loader, initializing and starting all services/controllers.\\nOptions:\\n\\tServicePromise is an optional boolean that will determine if the client callback functions should return a Promise.","params":[{"name":"Options:","desc":"","lua_type":"{ ServicePromise: boolean? }?"}],"returns":[{"desc":"","lua_type":"Promise<string>"}],"function_type":"static","source":{"line":403,"path":"src/init.luau"}},{"name":"GetService","desc":"Gets a service from the Loader by name (client only, and case sensitive).","params":[{"name":"Name:","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"table | nil"}],"function_type":"static","realm":["Client"],"source":{"line":412,"path":"src/init.luau"}},{"name":"CreateSignal","desc":"Flags that a new \\"Remote\\" Signal should be made","params":[],"returns":[{"desc":"","lua_type":"SignalFlag"}],"function_type":"static","source":{"line":419,"path":"src/init.luau"}},{"name":"CreateProperty","desc":"Flags that a new \\"Remote\\" Signal should be made","params":[],"returns":[{"desc":"","lua_type":"SignalFlag"}],"function_type":"static","source":{"line":426,"path":"src/init.luau"}},{"name":"OnStart","desc":"Waits for the Loader to start.","params":[],"returns":[{"desc":"","lua_type":"Promise<nil>"}],"function_type":"static","yields":true,"source":{"line":434,"path":"src/init.luau"}},{"name":"AddCustomLifecycle","desc":"Adds a custom lifecycle event to the Loader. This will allow you to add custom events that can be used in your services/controllers.","params":[{"name":"Name:","desc":"","lua_type":"string"},{"name":"Signal:","desc":"","lua_type":"any"}],"returns":[],"function_type":"static","source":{"line":442,"path":"src/init.luau"}}],"properties":[],"types":[],"name":"Cardinal","desc":"The main driver functions for Cardinal","source":{"line":447,"path":"src/init.luau"}}')}}]);