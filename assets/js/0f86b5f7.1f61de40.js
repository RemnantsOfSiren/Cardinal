"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[419],{56643:e=>{e.exports=JSON.parse('{"functions":[{"name":"OnInit?","desc":"Fires when the Service is initialized.","params":[],"returns":[],"function_type":"method","source":{"line":23,"path":"src/init.luau"}},{"name":"OnStart?","desc":"Fires when the Service is Started.","params":[],"returns":[],"function_type":"method","source":{"line":28,"path":"src/init.luau"}},{"name":"OnPlayerAdded?","desc":"Fires when a Player is added.","params":[],"returns":[],"function_type":"method","source":{"line":33,"path":"src/init.luau"}},{"name":"OnPlayerRemoving?","desc":"Fires when a Player is removed.","params":[],"returns":[],"function_type":"method","source":{"line":38,"path":"src/init.luau"}},{"name":"OnCharacterAdded?","desc":"Fires when a Character is added.","params":[{"name":"Character","desc":"","lua_type":"Instance"},{"name":"Player","desc":"","lua_type":"Player"}],"returns":[],"function_type":"method","source":{"line":45,"path":"src/init.luau"}},{"name":"OnStepped?","desc":"Fires when the Stepped event is fired.","params":[{"name":"ElapsedTime","desc":"","lua_type":"number"},{"name":"DeltaTime","desc":"","lua_type":"number"}],"returns":[],"function_type":"method","source":{"line":52,"path":"src/init.luau"}},{"name":"OnHeartbeat?","desc":"Fires when the Heartbeat event is fired.","params":[{"name":"DeltaTime","desc":"","lua_type":"number"}],"returns":[],"function_type":"method","source":{"line":58,"path":"src/init.luau"}},{"name":"OnPreAnimation?","desc":"Fires when the PreAnimation event is fired.","params":[{"name":"DeltaTime","desc":"","lua_type":"number"}],"returns":[],"function_type":"method","source":{"line":64,"path":"src/init.luau"}},{"name":"OnPreSimulation?","desc":"Fires when the PreSimulation event is fired.","params":[{"name":"DeltaTime","desc":"","lua_type":"number"}],"returns":[],"function_type":"method","source":{"line":70,"path":"src/init.luau"}},{"name":"OnPostAnimation?","desc":"Fires when the PostAnimation event is fired.","params":[{"name":"DeltaTime","desc":"","lua_type":"number"}],"returns":[],"function_type":"method","source":{"line":76,"path":"src/init.luau"}},{"name":"OnPostSimulation?","desc":"Fires when the PostSimulation event is fired.","params":[{"name":"DeltaTime","desc":"","lua_type":"number"}],"returns":[],"function_type":"method","source":{"line":82,"path":"src/init.luau"}}],"properties":[{"name":"Client?","desc":"","lua_type":"{[string]: (self: self, Player: Player, ...) -> nil | () -> nil } | nil","source":{"line":18,"path":"src/init.luau"}}],"types":[],"name":"Service","desc":"All functions are optional for you to add, and will be called if they exist.\\n\\nExample Service\\n```lua\\nlocal ReplicatedStorage = game:GetService(\\"ReplicatedStorage\\")\\nlocal Packages = ReplicatedStorage:WaitForChild(\\"Packages\\")\\nlocal Cardinal = require(Packages:WaitForChild(\\"Cardinal\\"))\\n\\nlocal Service = {\\n\\tClient = {\\n\\t\\tTestSignal = Cardinal.CreateSignal(),\\n\\t\\tTestProperty = Cardinal.CreateProperty(0),\\n\\t},\\n}\\n\\nfunction Service:OnInit()\\n\\tprint(\\"Service Initialized\\")\\nend\\n\\nfunction Service:OnStart()\\n\\tprint(\\"Service Started\\")\\nend\\n\\nfunction Service:OnPlayerAdded(Player)\\n\\tprint(\\"Player Added: \\", Player)\\nend\\n\\nfunction Service:OnCharacterAdded(Character, Player)\\n\\tprint(\\"Character Added: \\", Character, Player)\\nend\\n\\nfunction Service:OnHeartbeat(DeltaTime)\\n\\tprint(\\"Heartbeats stepping...\\")\\nend\\n\\nreturn Service\\n```","realm":["Server"],"source":{"line":125,"path":"src/init.luau"}}')}}]);