"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[455],{15873:e=>{e.exports=JSON.parse('{"functions":[{"name":"Load","desc":"Loads a ModuleScript into the Loader. \\n\\nDeepOrPredicate can be a function that returns a boolean, or a boolean, using the boolean will determine if the function should be deep or and the function will be used to determine if the ModuleScript should be loaded.\\n\\nExclusions is an optional table of strings that will be used to exclude certain ModuleScripts from being loaded.","params":[{"name":"Parent:","desc":"","lua_type":"Instance"},{"name":"DeeporPredicate:","desc":"","lua_type":"(ModuleScript) -> boolean | boolean?,"},{"name":"Exclusions:","desc":"","lua_type":"{ string }?"}],"returns":[{"desc":"","lua_type":"Promise<string>"}],"function_type":"static","source":{"line":383,"path":"lib/init.luau"}},{"name":"Start","desc":"Starts the Loader, initializing and starting all services/controllers.","params":[],"returns":[{"desc":"","lua_type":"Promise<void>"}],"function_type":"static","source":{"line":390,"path":"lib/init.luau"}},{"name":"GetService","desc":"Gets a service from the Loader by name (client only, and case sensitive).","params":[{"name":"Name:","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"table | nil"}],"function_type":"static","realm":["Client"],"source":{"line":399,"path":"lib/init.luau"}},{"name":"CreateSignal","desc":"Flags that a new \\"Remote\\" Signal should be made","params":[],"returns":[{"desc":"","lua_type":"SignalFlag"}],"function_type":"static","source":{"line":406,"path":"lib/init.luau"}},{"name":"CreateProperty","desc":"Flags that a new \\"Remote\\" Signal should be made","params":[],"returns":[{"desc":"","lua_type":"SignalFlag"}],"function_type":"static","source":{"line":413,"path":"lib/init.luau"}},{"name":"OnStart","desc":"Waits for the Loader to start.","params":[],"returns":[{"desc":"","lua_type":"Promise<nil>"}],"function_type":"static","yields":true,"source":{"line":421,"path":"lib/init.luau"}}],"properties":[{"name":"Net","desc":"","lua_type":"Net","source":{"line":426,"path":"lib/init.luau"}}],"types":[],"name":"Cardinal","desc":"The main driver functions for cardinal","source":{"line":431,"path":"lib/init.luau"}}')}}]);