"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[363],{64760:e=>{e.exports=JSON.parse('{"functions":[{"name":"CreateSignal","desc":"","params":[{"name":"Bridge","desc":"","lua_type":"ServerBridge | ClientBridge"},{"name":"Name","desc":"","lua_type":"string"}],"returns":[],"function_type":"static","source":{"line":143,"path":"src/Net/init.luau"}},{"name":"CreateProperty","desc":"","params":[{"name":"Bridge","desc":"","lua_type":"ServerBridge | ClientBridge"},{"name":"Name","desc":"","lua_type":"string"},{"name":"Value","desc":"","lua_type":"any"}],"returns":[],"function_type":"static","source":{"line":151,"path":"src/Net/init.luau"}},{"name":"new","desc":"","params":[{"name":"Name","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"ServerNet | ClientNet"}],"function_type":"static","source":{"line":158,"path":"src/Net/init.luau"}}],"properties":[],"types":[],"name":"Net","desc":"A Module that allows for easier communication between the Server and Client.\\n\\nCardinal internally uses this module to handle the server-client communication.\\n\\n```lua\\nlocal Service = {\\n\\tClient = {},\\n} -- will tell Cardinal that this is a service needs to create a new Net, allowing for functions in this table to be what we call \\"client-exposed\\" functions.\\n\\nfunction Service.Client:Hello(Player) -- this function will be exposed to the client\\n\\tprint(\\"Hello\\", Player)\\nend\\n\\n-- in the client\\nlocal Cardinal = require(Path.to.Cardinal)\\n\\nlocal Service\\n\\nlocal Controller = {}\\n\\nfunction Controller:OnInit()\\n\\tService = Cardinal.GetService(\\"Service\\") -- this is the best practice in requiring a service on the client, OnInit will run after the server is fully ready so this ensures that the service is ready to be used.\\n\\tService:Hello() -- this will call the Hello function on the server\\nend\\n```","source":{"line":188,"path":"src/Net/init.luau"}}')}}]);